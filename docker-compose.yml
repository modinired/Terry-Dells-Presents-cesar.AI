version: '3.8'

services:
  td-manager-agent:
    build: .
    container_name: td-manager-agent
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - GOOGLE_CHAT_API_KEY=${GOOGLE_CHAT_API_KEY}
      - GOOGLE_CHAT_WEBHOOK_URL=${GOOGLE_CHAT_WEBHOOK_URL}
      - SIGNAL_PHONE_NUMBER=${SIGNAL_PHONE_NUMBER}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=INFO
      - TIMEZONE=UTC
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - td-agent-network

  postgres:
    image: postgres:15-alpine
    container_name: td-postgres
    environment:
      - POSTGRES_DB=td_manager_agent
      - POSTGRES_USER=td_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - td-agent-network

  redis:
    image: redis:7-alpine
    container_name: td-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - td-agent-network

  # Optional: Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: td-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - td-agent-network

  grafana:
    image: grafana/grafana:latest
    container_name: td-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - td-agent-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  td-agent-network:
    driver: bridge 