#!/bin/bash

# üöÄ Terry Delmonaco Automation Agent - Endpoint URL Script
# Version: 3.2

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üåê Terry Delmonaco Automation Agent - Endpoint URLs${NC}"
echo -e "${BLUE}================================================${NC}"
echo ""

# Configuration
PROJECT_ID=${PROJECT_ID:-$(gcloud config get-value project 2>/dev/null)}
REGION=${REGION:-"us-central1"}
SERVICE_NAME="td-manager-agent"

# Local development endpoints
echo -e "${GREEN}üì± Local Development Endpoints${NC}"
echo "=================================="
echo -e "${YELLOW}Base URL:${NC} http://localhost:8000"
echo ""
echo -e "${GREEN}Core Endpoints:${NC}"
echo "‚Ä¢ ${YELLOW}API Info:${NC} http://localhost:8000/"
echo "‚Ä¢ ${YELLOW}Health Check:${NC} http://localhost:8000/health"
echo "‚Ä¢ ${YELLOW}Agent Status:${NC} http://localhost:8000/agents"
echo "‚Ä¢ ${YELLOW}Performance Metrics:${NC} http://localhost:8000/metrics"
echo "‚Ä¢ ${YELLOW}Communication Status:${NC} http://localhost:8000/communication/status"
echo "‚Ä¢ ${YELLOW}Status Report:${NC} http://localhost:8000/status/report"
echo ""
echo -e "${GREEN}API Documentation:${NC}"
echo "‚Ä¢ ${YELLOW}Swagger UI:${NC} http://localhost:8000/docs"
echo "‚Ä¢ ${YELLOW}ReDoc:${NC} http://localhost:8000/redoc"
echo "‚Ä¢ ${YELLOW}OpenAPI JSON:${NC} http://localhost:8000/openapi.json"
echo ""

# Vertex AI deployment endpoints
if [ -n "$PROJECT_ID" ]; then
    echo -e "${GREEN}‚òÅÔ∏è  Vertex AI Deployment Endpoints${NC}"
    echo "====================================="
    
    # Get the service URL from Kubernetes
    SERVICE_URL=$(kubectl get service td-manager-agent -o jsonpath='{.status.url}' 2>/dev/null)
    
    if [ -n "$SERVICE_URL" ]; then
        echo -e "${YELLOW}Base URL:${NC} ${SERVICE_URL}"
        echo ""
        echo -e "${GREEN}Core Endpoints:${NC}"
        echo "‚Ä¢ ${YELLOW}API Info:${NC} ${SERVICE_URL}/"
        echo "‚Ä¢ ${YELLOW}Health Check:${NC} ${SERVICE_URL}/health"
        echo "‚Ä¢ ${YELLOW}Agent Status:${NC} ${SERVICE_URL}/agents"
        echo "‚Ä¢ ${YELLOW}Performance Metrics:${NC} ${SERVICE_URL}/metrics"
        echo "‚Ä¢ ${YELLOW}Communication Status:${NC} ${SERVICE_URL}/communication/status"
        echo "‚Ä¢ ${YELLOW}Status Report:${NC} ${SERVICE_URL}/status/report"
        echo ""
        echo -e "${GREEN}API Documentation:${NC}"
        echo "‚Ä¢ ${YELLOW}Swagger UI:${NC} ${SERVICE_URL}/docs"
        echo "‚Ä¢ ${YELLOW}ReDoc:${NC} ${SERVICE_URL}/redoc"
        echo "‚Ä¢ ${YELLOW}OpenAPI JSON:${NC} ${SERVICE_URL}/openapi.json"
        echo ""
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Service URL not available. Checking deployment status...${NC}"
        kubectl get pods -l app=td-manager-agent
        echo ""
        echo -e "${YELLOW}To get the service URL after deployment:${NC}"
        echo "kubectl get service td-manager-agent -o jsonpath='{.status.url}'"
        echo ""
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  PROJECT_ID not set. To get Vertex AI endpoints:${NC}"
    echo "export PROJECT_ID=your-gcp-project-id"
    echo "kubectl get service td-manager-agent -o jsonpath='{.status.url}'"
    echo ""
fi

# Docker Compose endpoints
echo -e "${GREEN}üê≥ Docker Compose Endpoints${NC}"
echo "==============================="
echo -e "${YELLOW}Base URL:${NC} http://localhost:8000"
echo ""
echo -e "${GREEN}Services:${NC}"
echo "‚Ä¢ ${YELLOW}Terry Delmonaco Agent:${NC} http://localhost:8000"
echo "‚Ä¢ ${YELLOW}PostgreSQL:${NC} localhost:5432"
echo "‚Ä¢ ${YELLOW}Redis:${NC} localhost:6379"
echo "‚Ä¢ ${YELLOW}Prometheus:${NC} http://localhost:9090"
echo "‚Ä¢ ${YELLOW}Grafana:${NC} http://localhost:3000"
echo ""

# Example API calls
echo -e "${GREEN}üìã Example API Calls${NC}"
echo "======================="
echo ""

echo -e "${YELLOW}Health Check:${NC}"
echo "curl http://localhost:8000/health"
echo ""

echo -e "${YELLOW}Get Agent Status:${NC}"
echo "curl http://localhost:8000/agents"
echo ""

echo -e "${YELLOW}Delegate Task:${NC}"
echo 'curl -X POST "http://localhost:8000/tasks/delegate" \
  -H "Content-Type: application/json" \
  -d '"'"'{"task_id": "test-123", "task_type": "email_processing", "priority": "routine"}'"'"
echo ""

echo -e "${YELLOW}Send Message via Google Chat:${NC}"
echo 'curl -X POST "http://localhost:8000/communication/send" \
  -H "Content-Type: application/json" \
  -d '"'"'{"platform": "google_chat", "recipient": "space-id", "message": "Hello from Terry Delmonaco Agent!"}'"'"
echo ""

echo -e "${YELLOW}Get Performance Metrics:${NC}"
echo "curl http://localhost:8000/metrics"
echo ""

# Environment-specific URLs
echo -e "${GREEN}üîß Environment Configuration${NC}"
echo "================================"
echo ""

echo -e "${YELLOW}Local Development:${NC}"
echo "‚Ä¢ Start local server: python app.py"
echo "‚Ä¢ Or use Docker: docker-compose up -d"
echo ""

echo -e "${YELLOW}Vertex AI Deployment:${NC}"
echo "‚Ä¢ Deploy: ./QUICK_DEPLOY.sh"
echo "‚Ä¢ Get URL: kubectl get service td-manager-agent"
echo "‚Ä¢ Port forward: kubectl port-forward service/td-manager-agent 8000:8000"
echo ""

echo -e "${GREEN}‚úÖ Endpoint URLs retrieved successfully!${NC}"
echo ""
echo -e "${BLUE}üí° Tips:${NC}"
echo "‚Ä¢ Use the health endpoint to verify the service is running"
echo "‚Ä¢ Check agent status to see which agents are active"
echo "‚Ä¢ Monitor metrics for performance insights"
echo "‚Ä¢ Use the API documentation at /docs for detailed endpoint information" 